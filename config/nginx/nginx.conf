worker_processes auto;
pid /run/nginx/nginx.pid;

events {
    worker_connections 1024;
    # multi_accept on;
    # use epoll;
}

http {
    ##
    # Defaults
    ##

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$request_body"';
    log_format main_json escape=json '{'
                      '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
                      '"connection": "$connection", ' # connection serial number
                      '"connection_requests": "$connection_requests", ' # number of requests made in connection
                      '"pid": "$pid", ' # process pid
                      '"request_id": "$request_id", ' # the unique request id
                      '"request_length": "$request_length", ' # request length (including headers and body)
                      '"remote_addr": "$remote_addr", ' # client IP
                      '"remote_user": "$remote_user", ' # client HTTP username
                      '"remote_port": "$remote_port", ' # client port
                      '"time_local": "$time_local", '
                      '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
                      '"request": "$request", ' # full path no arguments if the request
                      '"request_uri": "$request_uri", ' # full path and arguments if the request
                      '"args": "$args", ' # args
                      '"status": "$status", ' # response status code
                      '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
                      '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
                      '"http_referer": "$http_referer", ' # HTTP referer
                      '"http_user_agent": "$http_user_agent", ' # user agent
                      '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
                      '"http_host": "$http_host", ' # the request Host: header
                      '"server_name": "$server_name", ' # the name of the vhost serving the request
                      '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
                      '"request_body": "$request_body", '
                      '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
                      '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
                      '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
                      '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
                      '"upstream_response_length": "$upstream_response_length", ' # upstream response length
                      '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
                      '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
                      '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
                      '"scheme": "$scheme", ' # http or https
                      '"request_method": "$request_method", ' # request method
                      '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
                      '"pipe": "$pipe", ' # “p” if request was pipelined, “.” otherwise
                      '"gzip_ratio": "$gzip_ratio", '
                      '"http_cf_ray": "$http_cf_ray"'
                    '}';
    ##
    # Basic Settings
    ##

    sendfile on;
    # tcp_nopush on;
    # tcp_nodelay on;

    keepalive_timeout 65;
    # keepalive_requests 10000;

    ##
    # Additional Settings
    ##

    # types_hash_max_size 2048;
    # server_tokens off;
    # disable_symlinks off;

    # client_max_body_size 20m;
    # client_body_buffer_size 128K;
    # client_header_buffer_size 1k;
    # large_client_header_buffers 4 4k;
    # client_header_timeout  3m;
    # client_body_timeout    3m;
    # send_timeout           3m;
    # output_buffers         1 32k;
    # postpone_output        1460;

    # open_file_cache max=1000 inactive=20s;
    # open_file_cache_valid 30s;
    # open_file_cache_min_uses 5;
    # open_file_cache_errors off;

    ##
    # Mime types
    ##

    include /etc/nginx/mime.types;
    default_type  application/octet-stream;

    ##
    # Logging Settings
    ##

    access_log off;
    error_log /var/log/nginx/error.log warn;
    client_body_buffer_size 100M;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 1000;
    gzip_types application/x-javascript text/css application/javascript text/javascript text/plain text/xml application/json application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/xml font/eot font/opentype font/otf image/svg+xml image/vnd.microsoft.icon;

    include /etc/nginx/sites-enabled/*;
}
